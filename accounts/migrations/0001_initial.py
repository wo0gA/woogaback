# Generated by Django 5.0.7 on 2024-07-30 08:48

import accounts.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, max_length=64, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('provider', models.CharField(max_length=32, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('level', models.CharField(choices=[('NEWBIE', '뉴비'), ('ROOKIE', '루키'), ('SEMIPRO', '세미프로'), ('PRO', '프로'), ('MASTER', '마스터')], default='NEWBIE', max_length=8, verbose_name='레벨')),
                ('point', models.IntegerField(default=0, verbose_name='포인트')),
                ('manner_score', models.FloatField(default=0, verbose_name='매너지수')),
                ('profile', models.JSONField(blank=True, null=True, verbose_name='프로필사진')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', accounts.models.UserManager()),
            ],
        ),
    ]
